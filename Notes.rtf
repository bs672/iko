{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Light;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fmodern\fcharset0 Courier;\f4\fnil\fcharset0 Menlo-Regular;\f5\fnil\fcharset0 Menlo-Bold;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red45\green45\blue45;\red255\green255\blue255;
\red83\green83\blue83;\red246\green243\blue207;\red255\green255\blue255;\red0\green116\blue0;\red36\green38\blue41;
\red235\green236\blue237;\red27\green29\blue31;\red38\green38\blue38;\red64\green11\blue217;\red0\green0\blue0;
\red47\green180\blue29;\red234\green234\blue234;\red245\green245\blue247;\red239\green237\blue236;\red255\green255\blue255;
\red242\green242\blue242;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\cssrgb\c23137\c23137\c23137;\cssrgb\c100000\c100000\c100000;
\cssrgb\c40000\c40000\c40000;\cssrgb\c97255\c96078\c84706;\csgray\c100000;\csgenericrgb\c0\c45600\c0;\cssrgb\c18824\c20000\c21176;
\cssrgb\c93725\c94118\c94510;\cssrgb\c14118\c15294\c16078;\cssrgb\c20000\c20000\c20000;\cssrgb\c32308\c18668\c88227;\csgray\c0;
\cssrgb\c20238\c73898\c14947;\cssrgb\c93333\c93333\c93333;\cssrgb\c96863\c96863\c97647;\cssrgb\c94902\c94510\c94118;\cssrgb\c100000\c100000\c100000\c49804;
\cssrgb\c96078\c96078\c96078;}
\margl1440\margr1440\vieww14140\viewh12760\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf2 DONT give IAM access to the RPi\
they can see the certificate, and even the policy but it doesnt matter if they change the policy because they cant update it without aws cli and IAM access.\
they can change client id and thing name b/c of automatino\
so we hardcode the client id/thingName we chose for the device onto the policy instead of creating a policy that lets them publish/subscribe to any topic with their client id (which they can change)\
OR\
allow to only connect if certificate is for the thing they\'92re connecting from and then use variable $thingName everywhere\
\

\f1\fs41\fsmilli20667 \cf3 \cb4 \expnd0\expndtw0\kerning0
Another common approach is to have the coffee maker appear as an access point with its own SSID and pass phrase, which is supplied on the manufacturer\'92s quick start card. In this approach, when the coffee maker is plugged in and powered on the SSID of the coffee maker is broadcast so that it is easily identified. A user disconnects from the wireless network, connects wirelessly and directly to the coffee maker, and navigates to an area to enter the SSID and network pass phrase. The device is then configured as a client on the user\'92s network.\
\pard\pardeftab720\sl661\sa413\partightenfactor0

\f0\fs32 \cf5 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \
skinny\'92s mom - pmoulton47@gmail.com\
\
\
To switch AWS accounts - aws configure\
\
AWS Profile 2 - jai.singh96@gmail.com\
psk: L******1234!\
\
\pard\pardeftab720\sl320\partightenfactor0

\f2\fs28 \cf5 \cb6 Access Key ID: AKIAIRRF4UQDADA3HKMA\
Secret Access Key: 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\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f3 \cf2 \cb1 \kerning1\expnd0\expndtw0 // aws\
Access Key ID = "AKIAI33R3BSWOIYVABJQ";\
extern const char* awsSecKey = "eLsIet3/REUXNxh4unsnuILukUYu7pmwjvsLKWON";
\f0\fs32 \cf5 \cb4 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f3\fs28 \cf2 \cb7 \kerning1\expnd0\expndtw0 \CocoaLigature0 petalpi1 - pi@192.168.1.206\
heinous1\
\
petalpi2 - pi@192.168.1.123\
heinous2\
\
petalpi4 - pi@192.168.1.190\
heinous4\
\
petalpi5 - pi@192.168.1.50\
heinous5\
\
petalpi6 - pi@192.168.43.11\
heinous6\
\
MQTTEncoder.m\
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f4\fs22 \cf8 \cb1 //    assert (buffer == NULL);\

\f3\fs28 \cf2 \cb7 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
\cf2 to see scripts running - 
\f4\fs26 \cf9 \cb10 \expnd0\expndtw0\kerning0
\CocoaLigature1 ps -aef | grep python\
ps aux | grep python
\f3\fs28 \cf2 \cb7 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\sl300\partightenfactor0

\f4\fs26 \cf11 \cb10 \expnd0\expndtw0\kerning0
\CocoaLigature1 To kill a script sudo kill -9 <pid>\
\
run shell script on startup\
shell script \'97 while True:\
	run python script
\f3\fs28 \cf2 \cb7 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs32 \cf5 \cb4 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
data flow\
\pard\pardeftab720\sl360\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://docs.aws.amazon.com/iot/latest/developerguide/thing-shadow-data-flow.html"}}{\fldrslt \cf5 http://docs.aws.amazon.com/iot/latest/developerguide/thing-shadow-data-flow.html}}\
\
southern tier\
\pard\pardeftab720\sl320\partightenfactor0

\f2\fs28 \cf12 02607B
\f0\fs32 \cf5 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \
to autorun - sudo nano /etc/rc.local\
in the line before exit 0, write\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f5\b\fs22 \cf13 \cb7 \kerning1\expnd0\expndtw0 \CocoaLigature0 cd
\f4\b0 \cf14  /home/pi/iko7 \cf15 &&\cf14  python /home/pi/iko7/automatino_oo.py 1 0 &\
\
{\field{\*\fldinst{HYPERLINK "http://www.raspberrypi-spy.co.uk/2015/02/how-to-autorun-a-python-script-on-raspberry-pi-boot/"}}{\fldrslt 
\f0\fs32 \cf5 \cb4 \expnd0\expndtw0\kerning0
\CocoaLigature1 http://www.raspberrypi-spy.co.uk/2015/02/how-to-autorun-a-python-script-on-raspberry-pi-boot/}}
\f0\fs32 \cf5 \cb4 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \
1ZY275X79006180702\
current profile highlighted in schedule itself instead of top\
android top bar type fan heat etc, click to turn off and pull down etc\
schedule like apple music queue\
draggable interchange of profiles\
drag right to remove profile\
switch between petal boxes like gmail accounts\
\
fan/heat icons vs light slider\
basic (circleslider) and advanced (profiles)\
left right animation instead of down and up
\f3\fs28 \cf2 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0
\cf2 \
adafruit huzzah by adafruit - connect to Alexa\
Parse, heroku\
\
\
Try AWS standard\
Try AWS special link\
Mongoose\
Try Azure\
Try IBM\
Try Pi+AWS\
\
a who\'92s who of nobodies\
\
TEST IF TOUCH UP IS ENOUGH ON ACTUAL PHONE INSTEAD OF VALUECHANGED\
\
// aws\
extern const char* awsKeyID = "AKIAI33R3BSWOIYVABJQ";\
extern const char* awsSecKey = "eLsIet3/REUXNxh4unsnuILukUYu7pmwjvsLKWON";\
\
// aws iot\
extern const char* awsIotRegion = "us-east-2"; //eg: us-west-2\
extern const char* awsIotEndpoint = "https://a3nxzzc72rdj05.iot.us-east-2.amazonaws.com/things/ESPNODE/shadow"; //eg https://a28xqqxluufakq.iot.us-west-2.amazonaws.com/things/NODEMCU/shadow\
extern const char* awsIotDomain = "a3nxzzc72rdj05.iot.us-east-2.amazonaws.com"; //eg: a28xqqxluufakq.iot.us-west-2.amazonaws.com \
\
\
raspi-config\
sudo !!\
\
sudo reboot\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb16 \expnd0\expndtw0\kerning0
(optional)\
sudo apt-get install git-all\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0
\cf2 \cb1 \kerning1\expnd0\expndtw0 \
\
192.168.1.234 - heinous1\
131\
189\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f4\fs22 \cf14 \cb7 \CocoaLigature0 "certificateArn": "arn:aws:iot:us-east-2:991292982338:cert/491180a1de40dafe616053c7ff77c77e92baf21a9868510da196474f54c1bbe8"
\f3\fs28 \cf2 \cb1 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0
\cf2 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f4\fs22 \cf14 \cb7 \CocoaLigature0 "arn:aws:iot:us-east-2:991292982338:cert/03610438c44b2937362994d4f00f378698583269e148263a9574514e16ff9c49"
\f3\fs28 \cf2 \cb1 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0
\cf2 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://medium.com/a-swift-misadventure/setup-your-raspberry-pi-2-3-with-raspbian-headless-without-cables-c78309fd7045"}}{\fldrslt \cf2 https://medium.com/a-swift-misadventure/setup-your-raspberry-pi-2-3-with-raspbian-headless-without-cables-c78309fd7045}}\
\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb17 \expnd0\expndtw0\kerning0
sudo apt-get update\cb1 \
\cb17 sudo apt-get install python-pip\cb1 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0
\cf2 \
or put get-pip.py and run python get-pip.py\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
\cf2 \cb7 \CocoaLigature0 ssh pi@192.168.1.227\cb1 \CocoaLigature1 \
\pard\pardeftab720\sl400\partightenfactor0
\cf2 \cb18 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc2 scp hello.py pi@192.168.1.227:project\cb19 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 /\cb18 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 \
sudo pip install awscli\
sudo aws configure\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
\cf2 \cb7 \kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 certificateArn": "arn:aws:iot:us-east-2:991292982338:cert/c50b2cb292750aba1201fb736c4ad65acffd8d244bd001077764fc728b01a8cc\
\
certificateArn": "arn:aws:iot:us-east-2:991292982338:cert/2417a1db97093a1f16828d40f909406da0be47145040eb579406782344dd7e5a\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.hackster.io/mariocannistra/python-and-paho-for-mqtt-with-aws-iot-921e41?ref=part&ref_id=13748&offset=12"}}{\fldrslt \cf2 https://www.hackster.io/mariocannistra/python-and-paho-for-mqtt-with-aws-iot-921e41?ref=part&ref_id=13748&offset=12}}\
\
\
\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb10 \expnd0\expndtw0\kerning0
\CocoaLigature1 scp -r\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
\cf2 \cb7 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
cant digitalwrite if pwm_led.start(x) is going on\
cant ChangeDutyCycle if pwm_led.stop() was called last\
can pwm_led.start(x) even if already started\
\
\pard\pardeftab720\sl374\partightenfactor0
\cf2 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 pip install arrow\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \cb20 sudo easy_install --upgrade pytz\
\
fix timezone issue from within datetime\
fix disconnect problem\
\
\
\
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0
\cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 /**\
     Send MQTT message to specified topic\
    \
     @param message The message (As NSString object) to be sent.\
    \
     @param qos The QoS value to use when publishing (optional, default AWSIoTMQTTQoSAtMostOnce).\
    \
     @param topic The topic for publish to.\
     \
     @return Boolean value indicating success or failure.\
    \
     */\
    open func publishString(_ string: String, onTopic topic: String, qoS qos: AWSIoTMQTTQoS) -> Bool\
\
\
\
AWSIoTMQTTQoSAtMostOnce}